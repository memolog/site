<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>メモログ</title>
  
  <subtitle>💡 Personal notes about anything I&#39;m interested in</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://memolog.org/"/>
  <updated>2020-03-14T11:59:15.758Z</updated>
  <id>https://memolog.org/</id>
  
  <author>
    <name>Yutaka Yamaguchi</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Display module glossary</title>
    <link href="https://memolog.org/2020/display-module-glossary.html"/>
    <id>https://memolog.org/2020/display-module-glossary.html</id>
    <published>2020-03-14T10:02:28.000Z</published>
    <updated>2020-03-14T11:59:15.758Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今回はDisplay Moduleの&lt;a href=&quot;https://www.w3.org/TR/css-display-3/#glossary&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Appendix A: Glossary&lt;/a&gt;のところで、今までちゃんと確認しなかったもので、気になるところを簡単に確認しようかなと思う。そのうち見直すかも。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Automatic Box Type Transformations</title>
    <link href="https://memolog.org/2020/automatic-box-type-transformations.html"/>
    <id>https://memolog.org/2020/automatic-box-type-transformations.html</id>
    <published>2020-03-10T13:12:24.000Z</published>
    <updated>2020-03-10T13:12:15.232Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.w3.org/TR/css-display-3/#the-display-properties&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Box Layout Modes: the display property&lt;/a&gt;の最後の節として&lt;br&gt;&lt;a href=&quot;https://www.w3.org/TR/css-display-3/#transformations&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;2.7. Automatic Box Type Transformations&lt;/a&gt;について書かれているので、簡単に確認する。何らかのレイアウト効果の影響でboxのタイプが自動的に変わる場合があるという話。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>The display value property (box / legacy)</title>
    <link href="https://memolog.org/2020/display-value-property-3.html"/>
    <id>https://memolog.org/2020/display-value-property-3.html</id>
    <published>2020-03-09T09:35:47.000Z</published>
    <updated>2020-03-09T09:35:43.650Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://memolog.org/2020/display-value-property-2.html&quot;&gt;The display value property (list-item / internal)&lt;/a&gt;の続き。&lt;a href=&quot;https://www.w3.org/TR/css-display-3/#the-display-properties&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;2. Box Layout Modes: the display property&lt;/a&gt;からdisplayプロパティのvalueについて、残りのboxとlegacyについて確認していく。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>The display value property (list-item / internal)</title>
    <link href="https://memolog.org/2020/display-value-property-2.html"/>
    <id>https://memolog.org/2020/display-value-property-2.html</id>
    <published>2020-03-08T05:24:22.000Z</published>
    <updated>2020-03-08T05:24:41.521Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://memolog.org/2020/display-value-property.html&quot;&gt;The display value property (outside / inside)&lt;/a&gt;の続き。&lt;a href=&quot;https://www.w3.org/TR/css-display-3/#the-display-properties&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;2. Box Layout Modes: the display property&lt;/a&gt;からdisplayプロパティのvalueについて、list-itemとinterについて確認していく。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>The display value property (outside / inside)</title>
    <link href="https://memolog.org/2020/display-value-property.html"/>
    <id>https://memolog.org/2020/display-value-property.html</id>
    <published>2020-03-07T08:25:00.000Z</published>
    <updated>2020-03-08T04:21:03.328Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://memolog.org/2020/inner-and-outer-display-type.html&quot;&gt;Inner and outer display types&lt;/a&gt;の続き。&lt;a href=&quot;https://www.w3.org/TR/css-display-3/#the-display-properties&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;2. Box Layout Modes: the display property&lt;/a&gt;からdisplayプロパティのvalueについて確認していく。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>CSS Flow Layout</title>
    <link href="https://memolog.org/2020/css-flow-layout.html"/>
    <id>https://memolog.org/2020/css-flow-layout.html</id>
    <published>2020-03-06T14:11:00.000Z</published>
    <updated>2020-03-06T14:14:28.831Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今回は&lt;a href=&quot;https://www.w3.org/TR/css-display-3/#flow-layout&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;flow layout&lt;/a&gt;について確認しようと思う。&lt;br&gt;
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Formatting Context</title>
    <link href="https://memolog.org/2020/formatting-context.html"/>
    <id>https://memolog.org/2020/formatting-context.html</id>
    <published>2020-02-28T08:12:58.000Z</published>
    <updated>2020-03-03T23:39:14.051Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://memolog.org/2020/inner-and-outer-display-type.html&quot;&gt;Inner and outer display types&lt;/a&gt;にて、inner display type は&lt;strong&gt;formatting context&lt;/strong&gt;について定義し、子孫となるboxがどのように配置されるかを決める、と書いた。今回はformatting contextについて確認する。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Value Definition Syntax on CSS Value and Units Module</title>
    <link href="https://memolog.org/2020/value-definition-syntax-on-css-value-and-units-module.html"/>
    <id>https://memolog.org/2020/value-definition-syntax-on-css-value-and-units-module.html</id>
    <published>2020-02-27T09:10:13.000Z</published>
    <updated>2020-02-27T09:15:54.993Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前回の&lt;a href=&quot;https://memolog.org/2020/css-property-conventions.html&quot;&gt;CSS property conventions&lt;/a&gt;から引き続き。&lt;a href=&quot;https://www.w3.org/TR/css-values-3/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CSS Value and Units Module&lt;/a&gt;がvalueについての定義を、拡張または置き換えるものとして用意されているので、CSS2との差分を確認する。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>CSS property conventions</title>
    <link href="https://memolog.org/2020/css-property-conventions.html"/>
    <id>https://memolog.org/2020/css-property-conventions.html</id>
    <published>2020-02-24T21:48:00.000Z</published>
    <updated>2020-02-27T09:16:39.222Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前回の&lt;a href=&quot;https://memolog.org/2020/display-property-definition-in-css2.html&quot;&gt;The display property definition in CSS2&lt;/a&gt;に引き続き。&lt;a href=&quot;https://www.w3.org/TR/css-display-3/#values&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1.2. Values&lt;/a&gt;に、プロパティの仕様については&lt;a href=&quot;https://www.w3.org/TR/CSS22/about.html#property-defs&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1.4.2 CSS property definitions&lt;/a&gt;の表記に従うと書いてあるので、そのあたりを確認していく。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>The display property definition in CSS2</title>
    <link href="https://memolog.org/2020/display-property-definition-in-css2.html"/>
    <id>https://memolog.org/2020/display-property-definition-in-css2.html</id>
    <published>2020-02-23T00:26:00.000Z</published>
    <updated>2020-02-23T00:26:48.225Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前回の&lt;a href=&quot;https://memolog.org/2020/inner-and-outer-display-type.html&quot;&gt;Inner and outer display types&lt;/a&gt;に引き続き。&lt;a href=&quot;https://www.w3.org/TR/css-display-3/#placement&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;1.1. Module interactions&lt;/a&gt;にCSS Display Moduleは、CSS2の定義を置き換えるまたは拡張するものであると書かれているので、一応CSS2.2の&lt;a href=&quot;https://www.w3.org/TR/CSS22/visuren.html#display-prop&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;9.2.4 The ‘display’ property&lt;/a&gt;をざっと確認しようと思う。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Inner and outer display types</title>
    <link href="https://memolog.org/2020/inner-and-outer-display-type.html"/>
    <id>https://memolog.org/2020/inner-and-outer-display-type.html</id>
    <published>2020-02-17T21:25:00.000Z</published>
    <updated>2020-02-17T21:36:53.603Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前回の&lt;a href=&quot;https://memolog.org/2020/css-display-module-introduction.html&quot;&gt;CSS Display Module Introduction&lt;/a&gt;に引き続き、CSS Display Module Level 3の&lt;a href=&quot;https://www.w3.org/TR/css-display-3/#the-display-properties&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;2. Box Layout Modes: the display property&lt;/a&gt;冒頭部分についてのメモ。内容を見直して、変だなと思うところは随時修正してる。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>CSS Display Module Introduction</title>
    <link href="https://memolog.org/2020/css-display-module-introduction.html"/>
    <id>https://memolog.org/2020/css-display-module-introduction.html</id>
    <published>2020-02-16T14:17:00.000Z</published>
    <updated>2020-02-17T21:23:58.841Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;用語的な理解を得るために、&lt;a href=&quot;https://drafts.csswg.org/css-display/#intro&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CSS Display Module Level 3 Introduction&lt;/a&gt;の部分を読んで簡単にメモる、というメモ。&lt;a href=&quot;https://triple-underscore.github.io/css-display-ja.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;日本語訳&lt;/a&gt;も参考にしてる。内容を見直して、変だなと思うところは随時修正してる。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>About position:sticky</title>
    <link href="https://memolog.org/2020/about-position-sticky.html"/>
    <id>https://memolog.org/2020/about-position-sticky.html</id>
    <published>2020-02-15T01:17:04.000Z</published>
    <updated>2020-02-15T21:16:53.166Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;position:sticky&lt;/code&gt;を使った事がなかったので見出し部分につけてみた。&lt;a href=&quot;https://caniuse.com/#feat=css-sticky&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Can I use…&lt;/a&gt;によると、IE以外ならだいたい動作する。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>The Web Worker&#39;s lifetime</title>
    <link href="https://memolog.org/2020/web-workers-lifetime.html"/>
    <id>https://memolog.org/2020/web-workers-lifetime.html</id>
    <published>2020-02-13T11:17:00.000Z</published>
    <updated>2020-02-13T11:17:20.797Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Web Worker（以下worker）はいつ止まるのか。端的に言うと、画面遷移した時など、関連するDocumentがなくなった時に止まる。workerの実行は&lt;code&gt;closing&lt;/code&gt;フラグで管理されていて、このフラグがtrueになるとworkerはそれ以降の処理をしなくなる。workerのインスタンスが削除されるかどうかは仕様上では考慮されていない雰囲気だけど（ガベージコレクトされたときに削除されるのではなかろうか）、とにかく、実質的に、closingフラグがtrueになったタイミングでworkerは止まると言える。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Convert video files with the ffmpeg.js worker</title>
    <link href="https://memolog.org/2020/convert-video-files-with-ffmpegjs-worker.html"/>
    <id>https://memolog.org/2020/convert-video-files-with-ffmpegjs-worker.html</id>
    <published>2020-02-11T20:26:00.000Z</published>
    <updated>2020-02-11T20:26:17.547Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://memolog.org/2020/convert-screen-capture-with-ffmpeg.html&quot;&gt;Convert screen capture to animation GIF&lt;/a&gt;の話でffmpegを使ってキャプチャをGIFに変えるということをした。Macだとffmpegのインストールは簡単だしその方が良いと思うけど、環境によっては難しい場合もあるだろうし、そもそもインストールしてはならない状況もあるかもしれない。そんな時に&lt;a href=&quot;https://github.com/Kagami/ffmpeg.js&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ffmpeg.js&lt;/a&gt;をWeb Workersで動かすのはどうだろうかと思ってやってみた。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>n^2 sort algorithms again</title>
    <link href="https://memolog.org/2020/n2-sort-algorithms-again.html"/>
    <id>https://memolog.org/2020/n2-sort-algorithms-again.html</id>
    <published>2020-02-11T04:54:52.000Z</published>
    <updated>2020-02-11T05:24:39.932Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;O(n^2)の計算量で実行するソートアルゴリズムについては、&lt;a href=&quot;https://memolog.org/2018/bubble-sort-in-javascript.html&quot;&gt;Bubble Sort in JavaScript（バブルソート）&lt;/a&gt;、&lt;a href=&quot;https://memolog.org/2018/insertion-sort-in-javascript.html&quot;&gt;Insertion Sort in JavaScript（挿入ソート）&lt;/a&gt;、&lt;a href=&quot;https://memolog.org/2018/selection-sort-in-javascript.html&quot;&gt;Selection Sort in JavaScript（選択ソート）&lt;/a&gt;にて扱ったのだけど、完全に忘れてしまったので、もう一度確認する。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Convert screen capture to animation GIF</title>
    <link href="https://memolog.org/2020/convert-screen-capture-with-ffmpeg.html"/>
    <id>https://memolog.org/2020/convert-screen-capture-with-ffmpeg.html</id>
    <published>2020-02-09T21:49:09.000Z</published>
    <updated>2020-02-11T05:03:37.086Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Macの場合、&lt;a href=&quot;https://support.apple.com/ja-jp/HT201066#record&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Quicktime Player&lt;/a&gt;のファイルメニューの「新規画面収録」から簡単にスクリーンキャプチャを録画することができる（iPhoneの場合は&lt;a href=&quot;https://support.apple.com/ja-jp/HT207935&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;iPhone、iPad、iPod touch で画面を録画する方法&lt;/a&gt;参照）。再現性が難しいケースなどで複雑な手順を書き記すよりずっとわかりやすく動作を見せることができるのでとても便利。だけれども、動画はmov形式で保存されるので、githubのissueに貼り付ける事ができない。なので、&lt;a href=&quot;https://www.ffmpeg.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ffmpeg&lt;/a&gt;を使ってgifに変換しようという話。gifならgithubのissueに貼り付けられる。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Top-level await will be soon</title>
    <link href="https://memolog.org/2020/top-level-await-will-be-soon.html"/>
    <id>https://memolog.org/2020/top-level-await-will-be-soon.html</id>
    <published>2020-02-07T20:55:41.000Z</published>
    <updated>2020-02-11T05:00:28.537Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Statements/async_function&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;async&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Operators/await&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;await&lt;/a&gt;の書き方に慣れてくると、非同期の処理を待つ時はいつでもawaitを使いたくなるのだが、使えるのはasyncのついたfunctionの中だけでトップレベルでは使えない。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Web Workers work on IE10</title>
    <link href="https://memolog.org/2020/web-workers-work-on-ie10.html"/>
    <id>https://memolog.org/2020/web-workers-work-on-ie10.html</id>
    <published>2020-02-06T21:18:11.000Z</published>
    <updated>2020-02-11T05:00:57.370Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;JavaScriptはシングルスレッドでイベントドリブンであり、実行を非同期にすることはできるけど、基本的に同時に一つのことしかできない。&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/API/Web_Workers_API&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Web Workers&lt;/a&gt;を使えば、メインスレッドとは別のスレッドで処理を実行することができるので、メインスレッドとは別の処理を同時に実行することができる。Web Workersを使ったメインスレッドの負荷低減は今後のフロンドエンドにおいて必携の技術になると思われる。&lt;/p&gt;
&lt;p&gt;なのだけど、Web Workersは意外と歴史があり（よく知らないけど）、IE10でも動作する（&lt;a href=&quot;https://caniuse.com/#feat=webworkers&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Can I use Web Workers&lt;/a&gt;）。
    
    </summary>
    
    
    
  </entry>
  
  <entry>
    <title>Optional chaining and Nullish coalescing</title>
    <link href="https://memolog.org/2020/optional-chaining-and-nullish-coalescing.html"/>
    <id>https://memolog.org/2020/optional-chaining-and-nullish-coalescing.html</id>
    <published>2020-02-05T22:25:28.000Z</published>
    <updated>2020-02-11T05:01:46.278Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;ES2020で新しく追加された機能（&lt;a href=&quot;https://kangax.github.io/compat-table/es2016plus/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ECMAScript 2016+ compatibility table&lt;/a&gt;の画面の下の方にある）はどれもわりと実用的で、なくても大丈夫なんだけどあると便利といったものが並んでいる。Bigintは日常的には使わないとは思うけど。&lt;/p&gt;
&lt;p&gt;その中で、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nullish coalescing&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Operators/Optional_chaining&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Optional chaining&lt;/a&gt; はかなり便利。なくても大丈夫だし、使わなくても良いんだけど、便利だから日常的に書かれるJavaScriptの書き方を変えるものになると思う。
    
    </summary>
    
    
    
  </entry>
  
</feed>
