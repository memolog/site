<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>メモログ</title>
  
  <subtitle>💡 Personal notes about anything I&#39;m interested in</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://memolog.org/"/>
  <updated>2020-02-17T21:25:52.765Z</updated>
  <id>https://memolog.org/</id>
  
  <author>
    <name>Yutaka Yamaguchi</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Inner and outer display types</title>
    <link href="https://memolog.org/2020/inner-and-outer-display-type.html"/>
    <id>https://memolog.org/2020/inner-and-outer-display-type.html</id>
    <published>2020-02-17T21:25:00.000Z</published>
    <updated>2020-02-17T21:25:52.765Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;前回の&lt;a href=&quot;https://memolog.org/2020/css-display-module-introduction.html&quot;&gt;CSS Display Module Introduction&lt;/a&gt;に引き続き、CSS Display Module Level 3の&lt;a href=&quot;https://www.w3.org/TR/css-display-3/#the-display-properties&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;2. Box Layout Modes: the display property&lt;/a&gt;冒頭部分についてのメモ。内容を見直して、変だなと思うところは随時修正してる。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CSS Display Module Introduction</title>
    <link href="https://memolog.org/2020/css-display-module-introduction.html"/>
    <id>https://memolog.org/2020/css-display-module-introduction.html</id>
    <published>2020-02-16T14:17:00.000Z</published>
    <updated>2020-02-17T21:23:58.841Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;用語的な理解を得るために、&lt;a href=&quot;https://drafts.csswg.org/css-display/#intro&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CSS Display Module Level 3 Introduction&lt;/a&gt;の部分を読んで簡単にメモる、というメモ。&lt;a href=&quot;https://triple-underscore.github.io/css-display-ja.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;日本語訳&lt;/a&gt;も参考にしてる。内容を見直して、変だなと思うところは随時修正してる。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>About position:sticky</title>
    <link href="https://memolog.org/2020/about-position-sticky.html"/>
    <id>https://memolog.org/2020/about-position-sticky.html</id>
    <published>2020-02-15T01:17:04.000Z</published>
    <updated>2020-02-15T21:16:53.166Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;position:sticky&lt;/code&gt;を使った事がなかったので見出し部分につけてみた。&lt;a href=&quot;https://caniuse.com/#feat=css-sticky&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Can I use…&lt;/a&gt;によると、IE以外ならだいたい動作する。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>The Web Worker&#39;s lifetime</title>
    <link href="https://memolog.org/2020/web-workers-lifetime.html"/>
    <id>https://memolog.org/2020/web-workers-lifetime.html</id>
    <published>2020-02-13T11:17:00.000Z</published>
    <updated>2020-02-13T11:17:20.797Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Web Worker（以下worker）はいつ止まるのか。端的に言うと、画面遷移した時など、関連するDocumentがなくなった時に止まる。workerの実行は&lt;code&gt;closing&lt;/code&gt;フラグで管理されていて、このフラグがtrueになるとworkerはそれ以降の処理をしなくなる。workerのインスタンスが削除されるかどうかは仕様上では考慮されていない雰囲気だけど（ガベージコレクトされたときに削除されるのではなかろうか）、とにかく、実質的に、closingフラグがtrueになったタイミングでworkerは止まると言える。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Convert video files with the ffmpeg.js worker</title>
    <link href="https://memolog.org/2020/convert-video-files-with-ffmpegjs-worker.html"/>
    <id>https://memolog.org/2020/convert-video-files-with-ffmpegjs-worker.html</id>
    <published>2020-02-11T20:26:00.000Z</published>
    <updated>2020-02-11T20:26:17.547Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://memolog.org/2020/convert-screen-capture-with-ffmpeg.html&quot;&gt;Convert screen capture to animation GIF&lt;/a&gt;の話でffmpegを使ってキャプチャをGIFに変えるということをした。Macだとffmpegのインストールは簡単だしその方が良いと思うけど、環境によっては難しい場合もあるだろうし、そもそもインストールしてはならない状況もあるかもしれない。そんな時に&lt;a href=&quot;https://github.com/Kagami/ffmpeg.js&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ffmpeg.js&lt;/a&gt;をWeb Workersで動かすのはどうだろうかと思ってやってみた。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>n^2 sort algorithms again</title>
    <link href="https://memolog.org/2020/n2-sort-algorithms-again.html"/>
    <id>https://memolog.org/2020/n2-sort-algorithms-again.html</id>
    <published>2020-02-11T04:54:52.000Z</published>
    <updated>2020-02-11T05:24:39.932Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;O(n^2)の計算量で実行するソートアルゴリズムについては、&lt;a href=&quot;https://memolog.org/2018/bubble-sort-in-javascript.html&quot;&gt;Bubble Sort in JavaScript（バブルソート）&lt;/a&gt;、&lt;a href=&quot;https://memolog.org/2018/insertion-sort-in-javascript.html&quot;&gt;Insertion Sort in JavaScript（挿入ソート）&lt;/a&gt;、&lt;a href=&quot;https://memolog.org/2018/selection-sort-in-javascript.html&quot;&gt;Selection Sort in JavaScript（選択ソート）&lt;/a&gt;にて扱ったのだけど、完全に忘れてしまったので、もう一度確認する。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Convert screen capture to animation GIF</title>
    <link href="https://memolog.org/2020/convert-screen-capture-with-ffmpeg.html"/>
    <id>https://memolog.org/2020/convert-screen-capture-with-ffmpeg.html</id>
    <published>2020-02-09T21:49:09.000Z</published>
    <updated>2020-02-11T05:03:37.086Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Macの場合、&lt;a href=&quot;https://support.apple.com/ja-jp/HT201066#record&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Quicktime Player&lt;/a&gt;のファイルメニューの「新規画面収録」から簡単にスクリーンキャプチャを録画することができる（iPhoneの場合は&lt;a href=&quot;https://support.apple.com/ja-jp/HT207935&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;iPhone、iPad、iPod touch で画面を録画する方法&lt;/a&gt;参照）。再現性が難しいケースなどで複雑な手順を書き記すよりずっとわかりやすく動作を見せることができるのでとても便利。だけれども、動画はmov形式で保存されるので、githubのissueに貼り付ける事ができない。なので、&lt;a href=&quot;https://www.ffmpeg.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ffmpeg&lt;/a&gt;を使ってgifに変換しようという話。gifならgithubのissueに貼り付けられる。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Top-level await will be soon</title>
    <link href="https://memolog.org/2020/top-level-await-will-be-soon.html"/>
    <id>https://memolog.org/2020/top-level-await-will-be-soon.html</id>
    <published>2020-02-07T20:55:41.000Z</published>
    <updated>2020-02-11T05:00:28.537Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Statements/async_function&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;async&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Operators/await&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;await&lt;/a&gt;の書き方に慣れてくると、非同期の処理を待つ時はいつでもawaitを使いたくなるのだが、使えるのはasyncのついたfunctionの中だけでトップレベルでは使えない。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Web Workers work on IE10</title>
    <link href="https://memolog.org/2020/web-workers-work-on-ie10.html"/>
    <id>https://memolog.org/2020/web-workers-work-on-ie10.html</id>
    <published>2020-02-06T21:18:11.000Z</published>
    <updated>2020-02-11T05:00:57.370Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;JavaScriptはシングルスレッドでイベントドリブンであり、実行を非同期にすることはできるけど、基本的に同時に一つのことしかできない。&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/API/Web_Workers_API&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Web Workers&lt;/a&gt;を使えば、メインスレッドとは別のスレッドで処理を実行することができるので、メインスレッドとは別の処理を同時に実行することができる。Web Workersを使ったメインスレッドの負荷低減は今後のフロンドエンドにおいて必携の技術になると思われる。&lt;/p&gt;
&lt;p&gt;なのだけど、Web Workersは意外と歴史があり（よく知らないけど）、IE10でも動作する（&lt;a href=&quot;https://caniuse.com/#feat=webworkers&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Can I use Web Workers&lt;/a&gt;）。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Optional chaining and Nullish coalescing</title>
    <link href="https://memolog.org/2020/optional-chaining-and-nullish-coalescing.html"/>
    <id>https://memolog.org/2020/optional-chaining-and-nullish-coalescing.html</id>
    <published>2020-02-05T22:25:28.000Z</published>
    <updated>2020-02-11T05:01:46.278Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;ES2020で新しく追加された機能（&lt;a href=&quot;https://kangax.github.io/compat-table/es2016plus/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;ECMAScript 2016+ compatibility table&lt;/a&gt;の画面の下の方にある）はどれもわりと実用的で、なくても大丈夫なんだけどあると便利といったものが並んでいる。Bigintは日常的には使わないとは思うけど。&lt;/p&gt;
&lt;p&gt;その中で、&lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Nullish_coalescing_operator&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Nullish coalescing&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/JavaScript/Reference/Operators/Optional_chaining&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Optional chaining&lt;/a&gt; はかなり便利。なくても大丈夫だし、使わなくても良いんだけど、便利だから日常的に書かれるJavaScriptの書き方を変えるものになると思う。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Event target and currentTarget</title>
    <link href="https://memolog.org/2020/event-target-and-currenttarget.html"/>
    <id>https://memolog.org/2020/event-target-and-currenttarget.html</id>
    <published>2020-02-04T22:32:36.000Z</published>
    <updated>2020-02-04T23:52:01.900Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;Eventオブジェクトには&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/API/Event/currentTarget&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;currentTarget&lt;/a&gt;と&lt;a href=&quot;https://developer.mozilla.org/ja/docs/Web/API/Event/target&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;target&lt;/a&gt;の2つのプロパティがあるけど、いつもどっちがどっちか混同する。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Load jQuery library in the Chrome developer console</title>
    <link href="https://memolog.org/2020/load-jquery-in-developer-console.html"/>
    <id>https://memolog.org/2020/load-jquery-in-developer-console.html</id>
    <published>2020-02-03T22:19:43.000Z</published>
    <updated>2020-02-11T05:02:04.881Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;スクリプト内のDOM操作でjQueryを使っているけれど、処理がスクリプト内で完結していて、GlobalにはjQueryをロードさせていないという場合がある。あると思う。&lt;/p&gt;
&lt;p&gt;そういった場合、例えばそのスクリプトに新しい実装を入れたいけどjQueryでのDOM操作が自分の期待通りに行えるかをChromeのデベロッパーツールでちょっと確認したいみたいな時に少し困る。大して困らない気もするけど、少し手間ではある。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>「第四の革命」を読んだ</title>
    <link href="https://memolog.org/2019/book-the-4th-revolution.html"/>
    <id>https://memolog.org/2019/book-the-4th-revolution.html</id>
    <published>2019-05-01T23:41:09.000Z</published>
    <updated>2019-05-02T04:38:07.393Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;「&lt;a href=&quot;https://www.shin-yo-sha.co.jp/mokuroku/books/978-4-7885-1522-2.htm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;第四の革命&lt;/a&gt;」を読んだ。情報通信技術が、従来の「記録する・履歴をとる」という単純な伝達手段であったものから飛躍して、記録・履歴のデータが処理され、情報として再利用されるようになった。それが様々なテクノロジーに内包されるにつれ、情報通信技術が単なるツールという枠を越えて、情報世界（情報圏・インフォスフィア）を構成するようになっている。インフォスフィアがどのように個々人や世界に影響をもたらすのか、といった内容である。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ナノテクノロジー、IOT、ウェブ2.0 …（中略。いろんなテクノロジー）… これらすべての現象を、一つの、マクロなトレンンドの多様な側面として説明できるような、統合的視点を見つけ出すことができるだろうか？　それに答えるのが難しいのは、まず我々がいまだにICT（情報通信技術）を、外界と、そして我々相互が関わりあうためのツール見なしているという点にある。ICTは、実際にはすでに環境なのであり、人類学的な、そして社会的な、世界を解釈する力となっているのである。それは、我々の知的、物理的な現実を生み出し、形成し、我々の自己理解を変え、我々が相互に関わるやり方を変え、世界を理解する方法をより高度化している。そしてこれらすべてが、広く、深く、強力に進んでいるのである。（「はじめに」より）
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Genarate Anki Cards Tool</title>
    <link href="https://memolog.org/2019/generate-anki-cards-tool.html"/>
    <id>https://memolog.org/2019/generate-anki-cards-tool.html</id>
    <published>2019-01-04T02:47:48.000Z</published>
    <updated>2019-01-04T04:21:07.312Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;最近&lt;a href=&quot;https://apps.ankiweb.net/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Anki&lt;/a&gt;を使って単語の記憶をしようという試みをしている。もともとは&lt;a href=&quot;https://fluent-forever.com/book/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Fluent Forever&lt;/a&gt;という本に載っていたところからこのアプリを知った（最近になって邦訳「&lt;a href=&quot;https://amzn.to/2F35KpT&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;脳が認める外国語勉強法&lt;/a&gt;」があると知った）。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Merge Sort in JavaScript</title>
    <link href="https://memolog.org/2018/merge-sort-in-javascript.html"/>
    <id>https://memolog.org/2018/merge-sort-in-javascript.html</id>
    <published>2018-08-19T08:43:28.000Z</published>
    <updated>2019-01-04T02:09:12.877Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://memolog.org/2018/insertion-sort-in-javascript.html&quot;&gt;Insertion Sort in JavaScript&lt;/a&gt;からの引き続き。内容は&lt;a href=&quot;https://en.wikipedia.org/wiki/Merge_sort&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Merge sort&lt;/a&gt;からの抜粋なので、詳細はそちらを参照。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>A11y fixes for prism default theme</title>
    <link href="https://memolog.org/2018/a11y-fixes-for-prism-default-theme.html"/>
    <id>https://memolog.org/2018/a11y-fixes-for-prism-default-theme.html</id>
    <published>2018-08-17T15:18:27.000Z</published>
    <updated>2019-01-04T02:09:12.873Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://developers.google.com/web/tools/lighthouse&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Lighthouse&lt;/a&gt; reported &lt;a href=&quot;https://paulirish.github.io/lighthouse/docs/api/lighthouse/2.5.1/lighthouse-core_audits_accessibility_color-contrast.js.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;color contrast issues&lt;/a&gt; in the code block colored by &lt;a href=&quot;https://prismjs.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;prism.js&lt;/a&gt;. Actually I don’t care about these issues because people doesn’t read code blocks carefully. However, I just did the quick fixes for them by changing the color to see the contrast ratio in Chrome developer console.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Add JSON-LD structured data</title>
    <link href="https://memolog.org/2018/add-json-ld-structured-data.html"/>
    <id>https://memolog.org/2018/add-json-ld-structured-data.html</id>
    <published>2018-08-14T09:04:54.000Z</published>
    <updated>2019-01-04T02:09:12.874Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;構造化データ（structured data）の部分をmicrodataからJSON-LDに置き換えてみた。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Create a new icon</title>
    <link href="https://memolog.org/2018/create-a-new-icon.html"/>
    <id>https://memolog.org/2018/create-a-new-icon.html</id>
    <published>2018-08-11T22:28:32.000Z</published>
    <updated>2019-01-04T02:09:12.875Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;アイコンをsvgで作り直してページの一番上につけた。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Insertion Sort in JavaScript</title>
    <link href="https://memolog.org/2018/insertion-sort-in-javascript.html"/>
    <id>https://memolog.org/2018/insertion-sort-in-javascript.html</id>
    <published>2018-08-06T20:47:14.000Z</published>
    <updated>2019-01-04T02:09:12.876Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://memolog.org/2018/selection-sort-in-javascript.html&quot;&gt;Selection Sort in JavaScript&lt;/a&gt;の記事から引き続き。内容は&lt;a href=&quot;https://en.wikipedia.org/wiki/Insertion_sort&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;挿入ソート&lt;/a&gt;からの抜粋なので詳細はそちらを参照。
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Selection Sort in JavaScript</title>
    <link href="https://memolog.org/2018/selection-sort-in-javascript.html"/>
    <id>https://memolog.org/2018/selection-sort-in-javascript.html</id>
    <published>2018-08-04T20:57:21.000Z</published>
    <updated>2019-01-04T02:09:12.877Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://memolog.org/2018/bubble-sort-in-javascript.html&quot;&gt;Bubble Sort in JavaScript&lt;/a&gt;の記事から引き続き。内容はほぼ&lt;a href=&quot;https://en.wikipedia.org/wiki/Selection_sort&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;選択ソート&lt;/a&gt;から抜粋してるだけなので、詳しくはそちらを参照。JavaScript上で自前のソートを実装する意味はあまりないのだが、試しに選択ソートを実装してみた。
    
    </summary>
    
    
  </entry>
  
</feed>
